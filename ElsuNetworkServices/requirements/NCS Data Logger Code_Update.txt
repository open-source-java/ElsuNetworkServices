* store connections in service vice under dataserver
* when service removed, force close all connections
* break listener and connection into separate classes

DataServer
	init - log, max connections
	creates threadgroup for class
	create storage for connections
	create storage for services
	
	function addService(service, port)
		if port is not used
			create listener (thread) using threadgroup, port, service
			store listener into services
			start listener
			else
				return error
			
	function addConnection(socket, service)
		if not at maxConnections
			create connection (thread) using socket, service
			store connection into connections
			start connection
			else
				return error to socket
	
	function endConnection(connection)
		remove connection from connections

	function displayStatus
		loop through all services
			display service info
		loop through all connections
			display connetion info
			
Listener (thread)
	init - threadgroup, port, service
		call super with thread group
		set timeout to 600000 (5 mins)

	function stop()
		do interrupt for blocking call
		close the listener
	
	function run()
		create socket for new client (listener.accept)
		store the client for service

Connection (thread)
	init - socket, service
	
	function run()
		get socket in and out stream
		pass the stream to the service this client is tied to
		finally
			end connection
